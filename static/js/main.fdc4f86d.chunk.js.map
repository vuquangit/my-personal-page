{"version":3,"sources":["Template/Pages/404/index.js","Template/Header/header.style.js","Template/Header/index.js","Template/Footer/index.js","Components/HomePage.js","Template/Pages/Home/index.js","Template/Pages/Login/index.js","Template/pageConfigs.js","Template/main.js","App.js","serviceWorker.js","index.js"],"names":["Page404","Component","HeaderStyles","makeStyles","theme","root","flexGrow","appBar","backgroundColor","menuButton","marginRight","spacing","title","Header","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","Button","Footer","Grid","container","item","xs","sm","icon","faFacebookSquare","faInstagram","HomePage","style","textAlign","height","Home","LoginPage","pageConfigs","path","component","exact","Main","map","route","index","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yTAEqBA,E,iLAEjB,OACE,6BACE,mD,GAJ6BC,a,iECAxBC,EAAeC,YAAW,SAAAC,GAAK,MAAK,CAC/CC,KAAM,CACJC,SAAU,GAEZC,OAAQ,CACNC,gBAAiB,WAEnBC,WAAY,CACVC,YAAaN,EAAMO,QAAQ,IAE7BC,MAAO,CACLN,SAAU,MCJC,SAASO,IACtB,IAAMC,EAAUZ,IAEhB,OACE,yBAAKa,UAAWD,EAAQT,MACtB,kBAACW,EAAA,EAAD,CAAQC,SAAS,SAASF,UAAWD,EAAQP,QAC3C,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,KAAK,QACLL,UAAWD,EAAQL,WACnBY,MAAM,UACNC,aAAW,QAEX,kBAAC,IAAD,OAEF,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKT,UAAWD,EAAQF,OAA5C,gBAGA,kBAACa,EAAA,EAAD,CAAQJ,MAAM,WAAd,Y,4BCIKK,G,MAtBA,WACb,OACE,yBAAKX,UAAU,UACb,kBAACY,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,IACrB,sFAEF,kBAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,yBAAKhB,UAAU,kBACb,6BACE,kBAAC,IAAD,CAAiBiB,KAAMC,OAEzB,6BACE,kBAAC,IAAD,CAAiBD,KAAME,aCJtBC,EAhBE,WACf,OACE,6BACE,wBACEC,MAAO,CACLf,MAAO,QACPgB,UAAW,SACXC,OAAQ,SAJZ,6BCMSC,EARF,WACX,OACE,6BACE,kBAAC,EAAD,QCJeC,E,iLAEjB,OAAO,0C,GAF4BvC,aCoBxBwC,EAlBK,CAClB,CACEC,KAAM,OACNC,UAAW3C,EACX4C,OAAO,GAET,CACEF,KAAM,IACNC,UAAWR,EACXS,OAAO,GAET,CACEF,KAAM,SACNC,UAAWH,EACXI,OAAO,ICQIC,EAnBF,WAGX,OACE,yBAAK9B,UAAU,qBACb,kBAAC,IAAD,KACE,kBAACF,EAAD,MACA,yBAAKE,UAAU,wBACb,kBAAC,IAAD,KANN0B,EAAYK,IAAI,SAACC,EAAOC,GAAR,OAAkB,kBAAC,IAAD,iBAAWD,EAAX,CAAkBE,IAAKD,OAQjD,kBAAC,IAAD,CAAOL,UAAW3C,MAGtB,kBAAC,EAAD,SCTOkD,EARH,WACV,OACE,6BACE,kBAAC,EAAD,QCMcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.fdc4f86d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Page404 extends Component {\n  render() {\n    return (\n      <div>\n        <h2>PAGE NOT FOUND</h2>\n      </div>\n    );\n  }\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const HeaderStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  appBar: {\n    backgroundColor: \"#0088b7\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  }\n}));\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { HeaderStyles } from \"./header.style\";\n\nexport default function Header() {\n  const classes = HeaderStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBar}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            QUANG VU VAN\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faFacebookSquare,\n  faInstagram\n} from \"@fortawesome/free-brands-svg-icons\";\nimport \"./footer.scss\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <Grid container>\n        <Grid item xs={12} sm={10}>\n          <p>Copyright Â© 2019 Quang Vu Van. All rights reserved.</p>\n        </Grid>\n        <Grid item xs={12} sm={2}>\n          <div className=\"footer__social\">\n            <div>\n              <FontAwesomeIcon icon={faFacebookSquare} />\n            </div>\n            <div>\n              <FontAwesomeIcon icon={faInstagram} />\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <h1\n        style={{\n          color: 'black',\n          textAlign: 'center',\n          height: '80vh',\n        }}\n      >\n        WELLCOME TO MY HOMEPAGE\n      </h1>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\nimport HomePage from \"../../../Components/HomePage\";\n\nconst Home = () => {\n  return (\n    <div>\n      <HomePage />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nexport default class LoginPage extends Component {\n  render() {\n    return <div>Login</div>;\n  }\n}\n","import Page404 from \"./Pages/404\";\nimport HomePage from \"./Pages/Home\";\nimport LoginPage from \"./Pages/Login\";\n\nconst pageConfigs = [\n  {\n    path: \"/404\",\n    component: Page404,\n    exact: true\n  },\n  {\n    path: \"/\",\n    component: HomePage,\n    exact: true\n  },\n  {\n    path: \"/login\",\n    component: LoginPage,\n    exact: true\n  }\n];\n\nexport default pageConfigs;\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Page404 from \"./Pages/404\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport pageConfigs from \"./pageConfigs\";\n\nconst Main = () => {\n  const _renderPage = () =>\n    pageConfigs.map((route, index) => <Route {...route} key={index} />);\n  return (\n    <div className=\"position-relative\">\n      <HashRouter>\n        <Header />\n        <div className=\"container-fluid pt-0\">\n          <Switch>\n            {_renderPage()}\n            <Route component={Page404} />\n          </Switch>\n        </div>\n        <Footer />\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\nimport Main from \"./Template/main\";\n\nconst App = () => {\n  return (\n    <div>\n      <Main />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}